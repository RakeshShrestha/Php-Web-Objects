<?phpif (!function_exists('mb_ucwords')) {    function mb_ucwords($str = null) {        return mb_convert_case($str, MB_CASE_TITLE, "UTF-8");    }}if (!function_exists('url_encode')) {    function url_encode($string = null) {        return urlencode(utf8_encode($string));    }}if (!function_exists('url_decode')) {    function url_decode($string = null) {        return utf8_decode(urldecode($string));    }}function getUrl($path = null) {    if (PATH_URI != '/') {        return SITE_URI . PATH_URI . '/' . $path;    } else {        return SITE_URI . '/' . $path;    }}function clean($string = null) {    return strip_tags(trim($string));}function cleanHtml($html = null) {    $allowedtags = '<a><p><strong><em><strike><span><sub><sup><ol><ul><li><br><hr><br/><hr/><font><h1><h2><h3><h4><h5><h6><blockquote><div><table><thead><tbody><tr><td>';    $disabledattributes = array('onabort', 'onactivate', 'onafterprint', 'onafterupdate', 'onbeforeactivate', 'onbeforecopy', 'onbeforecut', 'onbeforedeactivate', 'onbeforeeditfocus', 'onbeforepaste', 'onbeforeprint', 'onbeforeunload', 'onbeforeupdate', 'onblur', 'onbounce', 'oncellchange', 'onchange', 'onclick', 'oncontextmenu', 'oncontrolselect', 'oncopy', 'oncut', 'ondataavaible', 'ondatasetchanged', 'ondatasetcomplete', 'ondblclick', 'ondeactivate', 'ondrag', 'ondragdrop', 'ondragend', 'ondragenter', 'ondragleave', 'ondragover', 'ondragstart', 'ondrop', 'onerror', 'onerrorupdate', 'onfilterupdate', 'onfinish', 'onfocus', 'onfocusin', 'onfocusout', 'onhelp', 'onkeydown', 'onkeypress', 'onkeyup', 'onlayoutcomplete', 'onload', 'onlosecapture', 'onmousedown', 'onmouseenter', 'onmouseleave', 'onmousemove', 'onmoveout', 'onmouseover', 'onmouseup', 'onmousewheel', 'onmove', 'onmoveend', 'onmovestart', 'onpaste', 'onpropertychange', 'onreadystatechange', 'onreset', 'onresize', 'onresizeend', 'onresizestart', 'onrowexit', 'onrowsdelete', 'onrowsinserted', 'onscroll', 'onselect', 'onselectionchange', 'onselectstart', 'onstart', 'onstop', 'onsubmit', 'onunload');    return trim(preg_replace('/<(.*?)>/ie', "'<' . preg_replace(array('/javascript:[^\"\']*/i', '/(" . implode('|', $disabledattributes) . ")[ \\t\\n]*=[ \\t\\n]*[\"\'][^\"\']*[\"\']/i', '/\s+/'), array('', '', ' '), stripslashes('\\1')) . '>'", strip_tags($html, $allowedtags)));}function getRequestIP() {    return isset($_SERVER['HTTP_VIA']) ? $_SERVER['HTTP_VIA'] : $_SERVER['REMOTE_ADDR'];}function genUID() {    return mb_substr(md5(uniqid(rand())), 0, 12);}function genGUID() {    $data = openssl_random_pseudo_bytes(16);    $data[6] = chr(ord($data[6]) & 0x0f | 0x40);    $data[8] = chr(ord($data[8]) & 0x3f | 0x80);    return vsprintf('%s%s-%s-%s-%s-%s%s%s', str_split(bin2hex($data), 4));}function createDir($path, $mode = 0777, $rec = true) {    $oldumask = umask(0);    mkdir($path, $mode, $rec);    umask($oldumask);}function writeLog($type = 'mylog', $msg = null) {    $file = APP_DIR . 'logs/' . $type . '.txt';    $datetime = @date('Y-m-d H:i:s');    $logmsg = '###' . $datetime . '### ' . $msg . "\r\n";    @file_put_contents($file, $logmsg, FILE_APPEND | LOCK_EX);}if (DEBUG) {    function customError($errno, $errstr, $errfile, $errline) {        echo "<div class='error' style='text-align:left'>";        echo "<b>Custom error:</b> [$errno] $errstr<br />";        echo "Error on line $errline in $errfile<br />";        echo "Ending Script";        echo "</div>";    }    set_error_handler("customError");}